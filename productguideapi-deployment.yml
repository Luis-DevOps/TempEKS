apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: productguideapi-deployment
  name: productguideapi-deployment
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: productguideapi-deployment
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: productguideapi-deployment
    spec:
      containers:
      - image: gemgroup/productguideapi:ab680cc9
        imagePullPolicy: IfNotPresent
        name: productguideapi
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: windows
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: docker-image-pull-sa
      serviceAccountName: docker-image-pull-sa
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 2
  conditions:
  - lastTransitionTime: "2022-03-04T22:37:13Z"
    lastUpdateTime: "2022-03-04T22:37:13Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  - lastTransitionTime: "2022-03-04T22:37:05Z"
    lastUpdateTime: "2022-03-04T22:37:13Z"
    message: ReplicaSet "productguideapi-deployment-6f667f5b58" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
